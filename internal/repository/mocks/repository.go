// Code generated by MockGen. DO NOT EDIT.
// Source: repository.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	models "github.com/mariaiu/book/internal/models"
)

// MockRepository is a mock of Repository interface.
type MockRepository struct {
	ctrl     *gomock.Controller
	recorder *MockRepositoryMockRecorder
}

// MockRepositoryMockRecorder is the mock recorder for MockRepository.
type MockRepositoryMockRecorder struct {
	mock *MockRepository
}

// NewMockRepository creates a new mock instance.
func NewMockRepository(ctrl *gomock.Controller) *MockRepository {
	mock := &MockRepository{ctrl: ctrl}
	mock.recorder = &MockRepositoryMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockRepository) EXPECT() *MockRepositoryMockRecorder {
	return m.recorder
}

// GetAuthorsByBook mocks base method.
func (m *MockRepository) GetAuthorsByBook(ctx context.Context, book string) ([]models.Author, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAuthorsByBook", ctx, book)
	ret0, _ := ret[0].([]models.Author)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAuthorsByBook indicates an expected call of GetAuthorsByBook.
func (mr *MockRepositoryMockRecorder) GetAuthorsByBook(ctx, book interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAuthorsByBook", reflect.TypeOf((*MockRepository)(nil).GetAuthorsByBook), ctx, book)
}

// GetBooksByAuthor mocks base method.
func (m *MockRepository) GetBooksByAuthor(ctx context.Context, author string) ([]models.Book, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetBooksByAuthor", ctx, author)
	ret0, _ := ret[0].([]models.Book)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetBooksByAuthor indicates an expected call of GetBooksByAuthor.
func (mr *MockRepositoryMockRecorder) GetBooksByAuthor(ctx, author interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetBooksByAuthor", reflect.TypeOf((*MockRepository)(nil).GetBooksByAuthor), ctx, author)
}
